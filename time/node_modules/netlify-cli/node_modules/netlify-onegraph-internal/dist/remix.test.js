"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var graphql_1 = require("graphql");
var index_1 = require("./index");
var test = function () {
    var sourceGraphQLFilename = "./tests/assets/netlifyGraphOperationsLibrary.graphql";
    var schemaGraphQLFilename = "./tests/assets/netlifyGraphSchema.graphql";
    var sourceGraphQLFile = (0, fs_1.readFileSync)(sourceGraphQLFilename, "utf8");
    var schemaGraphQLFile = (0, fs_1.readFileSync)(schemaGraphQLFilename, "utf8");
    var schema = (0, graphql_1.buildASTSchema)((0, graphql_1.parse)(schemaGraphQLFile));
    var netlifyGraphConfig = {
        extension: "js",
        graphQLConfigJsonFilename: [".graphqlrc.json"],
        webhookBasePath: "/webhooks",
        functionsPath: [
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "netlify",
            "functions",
        ],
        netlifyGraphPath: [
            "/",
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "app",
            "netlifyGraph",
        ],
        netlifyGraphImplementationFilename: [
            "/",
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "app",
            "netlifyGraph",
            "index.js",
        ],
        netlifyGraphTypeDefinitionsFilename: [
            "/",
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "app",
            "netlifyGraph",
            "index.d.ts",
        ],
        graphQLOperationsSourceFilename: [
            "/",
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "netlify",
            "functions",
            "netlifyGraph",
            "netlifyGraphOperationsLibrary.graphql",
        ],
        graphQLSchemaFilename: [
            "/",
            "Users",
            "s",
            "code",
            "remix-netlify-graph-test",
            "netlify",
            "functions",
            "netlifyGraph",
            "netlifyGraphSchema.graphql",
        ],
        netlifyGraphRequirePath: ["../../netlify/functions/netlifyGraph"],
        framework: "Remix",
        moduleType: "esm",
        language: "typescript",
        runtimeTargetEnv: "node",
    };
    console.log("config: ", netlifyGraphConfig);
    var result = index_1.NetlifyGraph.generateHandlerSource({
        handlerOptions: {
            postHttpMethod: true,
            useClientAuth: true,
        },
        netlifyGraphConfig: netlifyGraphConfig,
        operationId: "39b94699-9a08-4deb-bf06-8e5b4d5eee9f",
        operationsDoc: sourceGraphQLFile,
        schema: schema,
    });
    if (typeof result === "undefined") {
        console.error("No generated remix code");
    }
    // @ts-ignore
    var exportedFiles = result.exportedFiles;
    console.log("exportedFiles", exportedFiles);
    exportedFiles === null || exportedFiles === void 0 ? void 0 : exportedFiles.forEach(function (element) {
        var _a, _b;
        console.log((_a = element.name) === null || _a === void 0 ? void 0 : _a.join("/"), element.content);
        var sourcePath = "/Users/s/code/remix-netlify-graph-test/" +
            (((_b = element.name) === null || _b === void 0 ? void 0 : _b.join("/")) || "default.ts");
        (0, fs_1.writeFileSync)(sourcePath, element.content);
    });
};
test();
//# sourceMappingURL=remix.test.js.map