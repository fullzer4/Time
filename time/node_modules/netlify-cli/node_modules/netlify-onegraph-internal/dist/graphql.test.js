"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var graphql_1 = require("graphql");
var graphqlHelpers_1 = require("./graphqlHelpers");
var test = function () {
    var _a;
    var sourceGraphQLFilename = "./tests/assets/netlifyGraphOperationsLibrary.graphql";
    var schemaGraphQLFilename = "./tests/assets/netlifyGraphSchema.graphql";
    var sourceGraphQLFile = (0, fs_1.readFileSync)(sourceGraphQLFilename, "utf8");
    var schemaFile = (0, fs_1.readFileSync)(schemaGraphQLFilename, "utf8");
    var schema = (0, graphql_1.buildASTSchema)((0, graphql_1.parse)(schemaFile));
    var opsDoc = (0, graphql_1.parse)(sourceGraphQLFile);
    var targetOperationName = "Deprecated_FindLoggedInServicesQuery";
    var operation = opsDoc.definitions.find(function (operation) {
        var _a;
        if (operation.kind === graphql_1.Kind.OPERATION_DEFINITION &&
            ((_a = operation.name) === null || _a === void 0 ? void 0 : _a.value) === targetOperationName) {
            return true;
        }
    });
    if (!operation) {
        throw new Error("Could not find operation: " + targetOperationName);
    }
    var operationVariableNames = ((_a = operation.variableDefinitions) === null || _a === void 0 ? void 0 : _a.map(function (variableDefinition) { return variableDefinition.variable.name.value; })) || [];
    var variableSignature = (0, graphqlHelpers_1.typeScriptSignatureForOperationVariables)(operationVariableNames, schema, operation);
    console.log("variableSignature:\n" + variableSignature);
    var result = (0, graphqlHelpers_1.normalizeOperationsDoc)(sourceGraphQLFile);
    if (!result) {
        throw new Error("result is undefined");
    }
    (0, fs_1.writeFileSync)("/tmp/netlifyGraphOperationsLibrary.graphql", result);
};
test();
//# sourceMappingURL=graphql.test.js.map