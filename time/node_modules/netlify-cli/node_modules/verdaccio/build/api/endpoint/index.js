"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _bodyParser = _interopRequireDefault(require("body-parser"));

var _express = _interopRequireDefault(require("express"));

var _distTags = _interopRequireDefault(require("./api/dist-tags"));

var _package = _interopRequireDefault(require("./api/package"));

var _ping = _interopRequireDefault(require("./api/ping"));

var _publish = _interopRequireDefault(require("./api/publish"));

var _search = _interopRequireDefault(require("./api/search"));

var _stars = _interopRequireDefault(require("./api/stars"));

var _user = _interopRequireDefault(require("./api/user"));

var _v = _interopRequireDefault(require("./api/v1"));

var _search2 = _interopRequireDefault(require("./api/v1/search"));

var _whoami = _interopRequireDefault(require("./api/whoami"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const {
  match,
  validateName,
  validatePackage,
  encodeScopePackage,
  antiLoop
} = require('../middleware');

function _default(config, auth, storage) {
  /* eslint new-cap:off */
  const app = _express.default.Router();
  /* eslint new-cap:off */
  // validate all of these params as a package name
  // this might be too harsh, so ask if it causes trouble


  app.param('package', validatePackage);
  app.param('filename', validateName);
  app.param('tag', validateName);
  app.param('version', validateName);
  app.param('revision', validateName);
  app.param('token', validateName); // these can't be safely put into express url for some reason
  // TODO: For some reason? what reason?

  app.param('_rev', match(/^-rev$/));
  app.param('org_couchdb_user', match(/^org\.couchdb\.user:/));
  app.param('anything', match(/.*/));
  app.use(auth.apiJWTmiddleware());
  app.use(_bodyParser.default.json({
    strict: false,
    limit: config.max_body_size || '10mb'
  }));
  app.use(antiLoop(config)); // encode / in a scoped package name to be matched as a single parameter in routes

  app.use(encodeScopePackage); // for "npm whoami"

  (0, _whoami.default)(app);
  (0, _package.default)(app, auth, storage, config);
  (0, _search.default)(app, auth, storage);
  (0, _distTags.default)(app, auth, storage);
  (0, _publish.default)(app, auth, storage, config);
  (0, _ping.default)(app);
  (0, _stars.default)(app, storage);
  (0, _search2.default)(app, auth, storage);
  (0, _user.default)(app, auth, config);
  app.use((0, _v.default)(auth, storage, config));
  return app;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYXRjaCIsInZhbGlkYXRlTmFtZSIsInZhbGlkYXRlUGFja2FnZSIsImVuY29kZVNjb3BlUGFja2FnZSIsImFudGlMb29wIiwicmVxdWlyZSIsImNvbmZpZyIsImF1dGgiLCJzdG9yYWdlIiwiYXBwIiwiZXhwcmVzcyIsIlJvdXRlciIsInBhcmFtIiwidXNlIiwiYXBpSldUbWlkZGxld2FyZSIsImJvZHlQYXJzZXIiLCJqc29uIiwic3RyaWN0IiwibGltaXQiLCJtYXhfYm9keV9zaXplIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FwaS9lbmRwb2ludC9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJ0B2ZXJkYWNjaW8vdHlwZXMnO1xuXG5pbXBvcnQgeyBJQXV0aCwgSVN0b3JhZ2VIYW5kbGVyIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMnO1xuaW1wb3J0IGRpc3RUYWdzIGZyb20gJy4vYXBpL2Rpc3QtdGFncyc7XG5pbXBvcnQgcGtnIGZyb20gJy4vYXBpL3BhY2thZ2UnO1xuaW1wb3J0IHBpbmcgZnJvbSAnLi9hcGkvcGluZyc7XG5pbXBvcnQgcHVibGlzaCBmcm9tICcuL2FwaS9wdWJsaXNoJztcbmltcG9ydCBzZWFyY2ggZnJvbSAnLi9hcGkvc2VhcmNoJztcbmltcG9ydCBzdGFycyBmcm9tICcuL2FwaS9zdGFycyc7XG5pbXBvcnQgdXNlciBmcm9tICcuL2FwaS91c2VyJztcbmltcG9ydCBucG1WMSBmcm9tICcuL2FwaS92MSc7XG5pbXBvcnQgdjFTZWFyY2ggZnJvbSAnLi9hcGkvdjEvc2VhcmNoJztcbmltcG9ydCB3aG9hbWkgZnJvbSAnLi9hcGkvd2hvYW1pJztcblxuY29uc3QgeyBtYXRjaCwgdmFsaWRhdGVOYW1lLCB2YWxpZGF0ZVBhY2thZ2UsIGVuY29kZVNjb3BlUGFja2FnZSwgYW50aUxvb3AgfSA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmUnKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGNvbmZpZzogQ29uZmlnLCBhdXRoOiBJQXV0aCwgc3RvcmFnZTogSVN0b3JhZ2VIYW5kbGVyKSB7XG4gIC8qIGVzbGludCBuZXctY2FwOm9mZiAqL1xuICBjb25zdCBhcHAgPSBleHByZXNzLlJvdXRlcigpO1xuICAvKiBlc2xpbnQgbmV3LWNhcDpvZmYgKi9cbiAgLy8gdmFsaWRhdGUgYWxsIG9mIHRoZXNlIHBhcmFtcyBhcyBhIHBhY2thZ2UgbmFtZVxuICAvLyB0aGlzIG1pZ2h0IGJlIHRvbyBoYXJzaCwgc28gYXNrIGlmIGl0IGNhdXNlcyB0cm91YmxlXG4gIGFwcC5wYXJhbSgncGFja2FnZScsIHZhbGlkYXRlUGFja2FnZSk7XG4gIGFwcC5wYXJhbSgnZmlsZW5hbWUnLCB2YWxpZGF0ZU5hbWUpO1xuICBhcHAucGFyYW0oJ3RhZycsIHZhbGlkYXRlTmFtZSk7XG4gIGFwcC5wYXJhbSgndmVyc2lvbicsIHZhbGlkYXRlTmFtZSk7XG4gIGFwcC5wYXJhbSgncmV2aXNpb24nLCB2YWxpZGF0ZU5hbWUpO1xuICBhcHAucGFyYW0oJ3Rva2VuJywgdmFsaWRhdGVOYW1lKTtcblxuICAvLyB0aGVzZSBjYW4ndCBiZSBzYWZlbHkgcHV0IGludG8gZXhwcmVzcyB1cmwgZm9yIHNvbWUgcmVhc29uXG4gIC8vIFRPRE86IEZvciBzb21lIHJlYXNvbj8gd2hhdCByZWFzb24/XG4gIGFwcC5wYXJhbSgnX3JldicsIG1hdGNoKC9eLXJldiQvKSk7XG4gIGFwcC5wYXJhbSgnb3JnX2NvdWNoZGJfdXNlcicsIG1hdGNoKC9eb3JnXFwuY291Y2hkYlxcLnVzZXI6LykpO1xuICBhcHAucGFyYW0oJ2FueXRoaW5nJywgbWF0Y2goLy4qLykpO1xuXG4gIGFwcC51c2UoYXV0aC5hcGlKV1RtaWRkbGV3YXJlKCkpO1xuICBhcHAudXNlKGJvZHlQYXJzZXIuanNvbih7IHN0cmljdDogZmFsc2UsIGxpbWl0OiBjb25maWcubWF4X2JvZHlfc2l6ZSB8fCAnMTBtYicgfSkpO1xuICBhcHAudXNlKGFudGlMb29wKGNvbmZpZykpO1xuICAvLyBlbmNvZGUgLyBpbiBhIHNjb3BlZCBwYWNrYWdlIG5hbWUgdG8gYmUgbWF0Y2hlZCBhcyBhIHNpbmdsZSBwYXJhbWV0ZXIgaW4gcm91dGVzXG4gIGFwcC51c2UoZW5jb2RlU2NvcGVQYWNrYWdlKTtcbiAgLy8gZm9yIFwibnBtIHdob2FtaVwiXG4gIHdob2FtaShhcHApO1xuICBwa2coYXBwLCBhdXRoLCBzdG9yYWdlLCBjb25maWcpO1xuICBzZWFyY2goYXBwLCBhdXRoLCBzdG9yYWdlKTtcbiAgZGlzdFRhZ3MoYXBwLCBhdXRoLCBzdG9yYWdlKTtcbiAgcHVibGlzaChhcHAsIGF1dGgsIHN0b3JhZ2UsIGNvbmZpZyk7XG4gIHBpbmcoYXBwKTtcbiAgc3RhcnMoYXBwLCBzdG9yYWdlKTtcbiAgdjFTZWFyY2goYXBwLCBhdXRoLCBzdG9yYWdlKTtcbiAgdXNlcihhcHAsIGF1dGgsIGNvbmZpZyk7XG4gIGFwcC51c2UobnBtVjEoYXV0aCwgc3RvcmFnZSwgY29uZmlnKSk7XG4gIHJldHVybiBhcHA7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFNQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU07RUFBRUEsS0FBRjtFQUFTQyxZQUFUO0VBQXVCQyxlQUF2QjtFQUF3Q0Msa0JBQXhDO0VBQTREQztBQUE1RCxJQUF5RUMsT0FBTyxDQUFDLGVBQUQsQ0FBdEY7O0FBRWUsa0JBQVVDLE1BQVYsRUFBMEJDLElBQTFCLEVBQXVDQyxPQUF2QyxFQUFpRTtFQUM5RTtFQUNBLE1BQU1DLEdBQUcsR0FBR0MsaUJBQVFDLE1BQVIsRUFBWjtFQUNBO0VBQ0E7RUFDQTs7O0VBQ0FGLEdBQUcsQ0FBQ0csS0FBSixDQUFVLFNBQVYsRUFBcUJWLGVBQXJCO0VBQ0FPLEdBQUcsQ0FBQ0csS0FBSixDQUFVLFVBQVYsRUFBc0JYLFlBQXRCO0VBQ0FRLEdBQUcsQ0FBQ0csS0FBSixDQUFVLEtBQVYsRUFBaUJYLFlBQWpCO0VBQ0FRLEdBQUcsQ0FBQ0csS0FBSixDQUFVLFNBQVYsRUFBcUJYLFlBQXJCO0VBQ0FRLEdBQUcsQ0FBQ0csS0FBSixDQUFVLFVBQVYsRUFBc0JYLFlBQXRCO0VBQ0FRLEdBQUcsQ0FBQ0csS0FBSixDQUFVLE9BQVYsRUFBbUJYLFlBQW5CLEVBWDhFLENBYTlFO0VBQ0E7O0VBQ0FRLEdBQUcsQ0FBQ0csS0FBSixDQUFVLE1BQVYsRUFBa0JaLEtBQUssQ0FBQyxRQUFELENBQXZCO0VBQ0FTLEdBQUcsQ0FBQ0csS0FBSixDQUFVLGtCQUFWLEVBQThCWixLQUFLLENBQUMsc0JBQUQsQ0FBbkM7RUFDQVMsR0FBRyxDQUFDRyxLQUFKLENBQVUsVUFBVixFQUFzQlosS0FBSyxDQUFDLElBQUQsQ0FBM0I7RUFFQVMsR0FBRyxDQUFDSSxHQUFKLENBQVFOLElBQUksQ0FBQ08sZ0JBQUwsRUFBUjtFQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUUUsb0JBQVdDLElBQVgsQ0FBZ0I7SUFBRUMsTUFBTSxFQUFFLEtBQVY7SUFBaUJDLEtBQUssRUFBRVosTUFBTSxDQUFDYSxhQUFQLElBQXdCO0VBQWhELENBQWhCLENBQVI7RUFDQVYsR0FBRyxDQUFDSSxHQUFKLENBQVFULFFBQVEsQ0FBQ0UsTUFBRCxDQUFoQixFQXJCOEUsQ0FzQjlFOztFQUNBRyxHQUFHLENBQUNJLEdBQUosQ0FBUVYsa0JBQVIsRUF2QjhFLENBd0I5RTs7RUFDQSxxQkFBT00sR0FBUDtFQUNBLHNCQUFJQSxHQUFKLEVBQVNGLElBQVQsRUFBZUMsT0FBZixFQUF3QkYsTUFBeEI7RUFDQSxxQkFBT0csR0FBUCxFQUFZRixJQUFaLEVBQWtCQyxPQUFsQjtFQUNBLHVCQUFTQyxHQUFULEVBQWNGLElBQWQsRUFBb0JDLE9BQXBCO0VBQ0Esc0JBQVFDLEdBQVIsRUFBYUYsSUFBYixFQUFtQkMsT0FBbkIsRUFBNEJGLE1BQTVCO0VBQ0EsbUJBQUtHLEdBQUw7RUFDQSxvQkFBTUEsR0FBTixFQUFXRCxPQUFYO0VBQ0Esc0JBQVNDLEdBQVQsRUFBY0YsSUFBZCxFQUFvQkMsT0FBcEI7RUFDQSxtQkFBS0MsR0FBTCxFQUFVRixJQUFWLEVBQWdCRCxNQUFoQjtFQUNBRyxHQUFHLENBQUNJLEdBQUosQ0FBUSxnQkFBTU4sSUFBTixFQUFZQyxPQUFaLEVBQXFCRixNQUFyQixDQUFSO0VBQ0EsT0FBT0csR0FBUDtBQUNEIn0=