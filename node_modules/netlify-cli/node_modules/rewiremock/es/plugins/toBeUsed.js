import createPlugin from './_common';
import { getModuleName } from "../module";

var onEnable = function onEnable(_ref) {
  var mock = _ref.mock;

  mock.usedAs = undefined;
};

var onDisable = function onDisable(_ref2) {
  var mock = _ref2.mock;

  var name = mock.name;
  if (mock.flag_toBeUsed && !mock.usedAs) {
    if (!mock.wasRequired) {
      throw new Error(name + ' is set toBeUsed, but was unused');
    }

    var history = mock.rejected.map(function (_ref3) {
      var parent = _ref3.parent,
          plugins = _ref3.plugins;
      return getModuleName(parent) + '->' + plugins.join(',');
    });

    throw new Error(name + ' is set toBeUsed, was required, but rejected by plugins.\n' + history.join('\n'));
  }
};

var plugin = createPlugin({
  onDisable: onDisable,
  onEnable: onEnable,

  name: 'toBeUsed'
});

export default plugin;